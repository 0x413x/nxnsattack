set(CMAKE_VERBOSE_MAKEFILE ON)
set(Boost_ADDITIONAL_VERSIONS "1.55" )
find_package( Boost 1.55 )
include_directories(${Boost_INCLUDE_DIRS})
link_directories(${Boost_LIBRARY_DIRS})
# set(Boost_USE_STATIC_LIBS        ON)
add_definitions("-Wall -std=c++11")

add_library(
  libipv4
  utils.cpp
  ipv4.cpp udpv4.cpp udpv4client.cpp udpv4server.cpp
  tcpv4.cpp tcpv4client.cpp tcpv4server.cpp )
add_library( libdns dns.cpp )
add_library( libdnsserver  dns_server.cpp )

add_executable( echo                echo.cpp  )
add_executable( tcpsyn              tcpsyn.cpp )
add_executable( dns                 dnsclient.cpp )
add_executable( poison              poison.cpp )
add_executable( dnsself             dnsself.cpp )
add_executable( dnsclient_raw       dnsclient_raw.cpp )
add_executable( idns_server         idns_server.cpp )
add_executable( uncompress_loop     uncompress_loop.cpp )
add_executable( uncompress_loop_tcp uncompress_loop_tcp.cpp )
add_executable( axfr                axfr.cpp )
add_executable( edns0               edns0.cpp )
add_executable( edns_server         edns_server.cpp )
add_executable( edns_auth_server    edns_auth_server.cpp )
add_executable( edns_badvers_server edns_badvers_server.cpp )
add_executable( tc1_server          tc1_server.cpp )
add_executable( cname_server        cname_server.cpp )
add_executable( axfr_server         axfr_server.cpp )
add_executable( edns0_tcp           edns0_tcp.cpp )
add_executable( tkey                tkey.cpp )
add_executable( echo_server         udpv4echoserver.cpp )
add_executable( echo_client         udpv4echoclient.cpp )
target_link_libraries( echo   boost_program_options libipv4)
target_link_libraries( tcpsyn boost_program_options libipv4)
target_link_libraries( poison boost_program_options libdns libipv4)
target_link_libraries( dns                 libdns libipv4)
target_link_libraries( dnsself             libdns libipv4)
target_link_libraries( dnsclient_raw       libdns libipv4)
target_link_libraries( idns_server         libdns libipv4)
target_link_libraries( uncompress_loop     libdns libipv4)
target_link_libraries( uncompress_loop_tcp libdns libipv4)
target_link_libraries( axfr                libdns boost_program_options libipv4)
target_link_libraries( edns0               boost_program_options libipv4 libdns)
target_link_libraries( edns_server         boost_regex boost_thread boost_system libipv4 libdns)
target_link_libraries( edns_auth_server    boost_program_options libdnsserver boost_thread boost_system libipv4 libdns)
target_link_libraries( edns_badvers_server boost_program_options libdnsserver boost_thread boost_system libipv4 libdns)
target_link_libraries( tc1_server          boost_program_options libdnsserver boost_thread boost_system libipv4 libdns)
target_link_libraries( axfr_server         boost_program_options libdnsserver boost_thread boost_system libipv4 libdns)
target_link_libraries( cname_server        boost_program_options libdnsserver boost_thread boost_system libipv4 libdns)
target_link_libraries( edns0_tcp    libdns libipv4)
target_link_libraries( tkey         libipv4 libdns)
target_link_libraries( echo_server  boost_program_options libipv4)
target_link_libraries( echo_client  boost_program_options libipv4)


